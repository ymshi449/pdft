/home/yuming/anaconda3/envs/work/bin/python /home/yuming/pycharm-2019.1.2/helpers/pydev/pydevconsole.py --mode=client --port=41329
import sys; print('Python %s on %s' % (sys.version, sys.platform))
sys.path.extend(['/home/yuming/PDFT/pdft/pdft'])
Python 3.7.5 (default, Oct 25 2019, 15:51:11) 
Type 'copyright', 'credits' or 'license' for more information
IPython 7.9.0 -- An enhanced Interactive Python. Type '?' for help.
PyDev console: using IPython 7.9.0
Python 3.7.5 (default, Oct 25 2019, 15:51:11) 
[GCC 7.3.0] on linux
runfile('/home/yuming/PDFT/pdft/pdft/tests/XC_Inversion/Li2.py', wdir='/home/yuming/PDFT/pdft/pdft/tests/XC_Inversion')
  Threads set to 2 by Python driver.
WuYangScipy_BFGS_Hartree_aug-cc-pvqz_None_False_input_every
Number of Basis:  160 160
ESP fitting starts. This might take a while.
ESP fitting done
Initialize out_put: 0.
<<<<<<<<<<<<<<<<<<<<<<WuYang vxc Inversion<<<<<<<<<<<<<<<<<<<
|n| before 2.613310830825516
/home/yuming/anaconda3/envs/work/lib//python3.7/site-packages/scipy/optimize/_minimize.py:505: RuntimeWarning: Method BFGS does not use Hessian information (hess).
  RuntimeWarning)
Warning: Desired error not necessarily achieved due to precision loss.
         Current function value: -14.500094
         Iterations: 3063
         Function evaluations: 3148
         Gradient evaluations: 3136
|n| after 0.003912595661568332 L after -14.500094296883066
Ts 14.501101874244355
dTs -0.000989044355407186
eigenA
[-1.85988017 -1.8595501  -0.13308527]
[-2.07031071 -2.0699961  -0.33567181]
wfnDiff -0.1667980605957301
ESP fitting starts. This might take a while.
ESP fitting done
vxc_a_H_tq = np.copy(inverser.vxc_a_grid)
vxc_b_H_tq = np.copy(inverser.vxc_b_grid)
inverser.change_v0("FermiAmaldi")
inverser.find_vxc_scipy_WuYang(14000, opt_method=opt_method);
Initialize out_put: 0.
<<<<<<<<<<<<<<<<<<<<<<WuYang vxc Inversion<<<<<<<<<<<<<<<<<<<
|n| before 2.361972331553027
/home/yuming/anaconda3/envs/work/lib//python3.7/site-packages/scipy/optimize/_minimize.py:505: RuntimeWarning: Method BFGS does not use Hessian information (hess).
  RuntimeWarning)
Warning: Desired error not necessarily achieved due to precision loss.
         Current function value: -14.500082
         Iterations: 1561
         Function evaluations: 1805
         Gradient evaluations: 1793
|n| after 0.08532668607874999 L after -14.500081875535274
Ts 14.482351863169596
dTs 0.01776096671935834
eigenA
[-1.85988017 -1.8595501  -0.13308527]
[-1.99334056 -1.99120771 -0.26070786]
wfnDiff -0.01871548125173066
ESP fitting starts. This might take a while.
ESP fitting done
vxc_a_FA_aq = np.copy(inverser.vxc_a_grid)
vxc_b_FA_aq = np.copy(inverser.vxc_b_grid)
vxc_a_input_aq = np.copy(inverser.input_vxc_a)
vxc_b_input_aq = np.copy(inverser.input_vxc_b)
xyzw_input_aq = input_wfn.V_potential().get_np_xyzw()
xyzw_mol_aq = mol.Vpot.get_np_xyzw()
runfile('/home/yuming/PDFT/pdft/pdft/tests/XC_Inversion/Li2.py', wdir='/home/yuming/PDFT/pdft/pdft/tests/XC_Inversion')
WuYangScipy_BFGS_Hartree_aug-cc-pvtz_None_False_input_every
Number of Basis:  92 92
ESP fitting starts. This might take a while.
ESP fitting done
Initialize out_put: 0.
<<<<<<<<<<<<<<<<<<<<<<WuYang vxc Inversion<<<<<<<<<<<<<<<<<<<
|n| before 2.7828135212991514
/home/yuming/anaconda3/envs/work/lib//python3.7/site-packages/scipy/optimize/_minimize.py:505: RuntimeWarning: Method BFGS does not use Hessian information (hess).
  RuntimeWarning)
Warning: Desired error not necessarily achieved due to precision loss.
         Current function value: -14.261247
         Iterations: 6
         Function evaluations: 133
         Gradient evaluations: 121
|n| after 2.6192626078892736 L after -14.261247270699648
Ts 16.94248532724438
dTs -2.4529568147367735
eigenA
[-1.85980277 -1.8594294  -0.13315016]
[-2.44716961 -2.44694468 -0.22112362]
wfnDiff 0.017920278834840823
ESP fitting starts. This might take a while.
ESP fitting done
runfile('/home/yuming/PDFT/pdft/pdft/tests/XC_Inversion/Li2.py', wdir='/home/yuming/PDFT/pdft/pdft/tests/XC_Inversion')
WuYangScipy_BFGS_Hartree_aug-cc-pvtz_None_False_input_every
Number of Basis:  92 92
ESP fitting starts. This might take a while.
ESP fitting done
Initialize out_put: 0.
<<<<<<<<<<<<<<<<<<<<<<WuYang vxc Inversion<<<<<<<<<<<<<<<<<<<
|n| before 2.7828135213102576
/home/yuming/anaconda3/envs/work/lib//python3.7/site-packages/scipy/optimize/_minimize.py:505: RuntimeWarning: Method BFGS does not use Hessian information (hess).
  RuntimeWarning)
Warning: Desired error not necessarily achieved due to precision loss.
         Current function value: -14.228157
         Iterations: 5
         Function evaluations: 73
         Gradient evaluations: 68
|n| after 2.6719280667634986 L after -14.228156621422006
Ts 16.560712542989165
dTs -2.0711840304817204
eigenA
[-1.85980277 -1.8594294  -0.13315016]
[-2.32979803 -2.32965146 -0.22104702]
wfnDiff -0.12671388551024257
ESP fitting starts. This might take a while.
ESP fitting done
vxc_a_FA_d = np.copy(inverser.vxc_a_grid)
vxc_b_FA_d = np.copy(inverser.vxc_b_grid)
vxc_a_input_d = np.copy(inverser.input_vxc_a)
vxc_b_input_d = np.copy(inverser.input_vxc_b)
xyzw_input_d = input_wfn.V_potential().get_np_xyzw()
xyzw_mol_d = mol.Vpot.get_np_xyzw()
vxc_a_FA_at = np.copy(inverser.vxc_a_grid)
vxc_b_FA_at = np.copy(inverser.vxc_b_grid)
vxc_a_input_at = np.copy(inverser.input_vxc_a)
vxc_b_input_at = np.copy(inverser.input_vxc_b)
xyzw_input_at = input_wfn.V_potential().get_np_xyzw()
xyzw_mol_at = mol.Vpot.get_np_xyzw()
runfile('/home/yuming/PDFT/pdft/pdft/tests/XC_Inversion/Li2.py', wdir='/home/yuming/PDFT/pdft/pdft/tests/XC_Inversion')
WuYangScipy_BFGS_Hartree_cc-pvdz_None_False_input_every
Number of Basis:  28 28
ESP fitting starts. This might take a while.
ESP fitting done
Initialize out_put: 0.
<<<<<<<<<<<<<<<<<<<<<<WuYang vxc Inversion<<<<<<<<<<<<<<<<<<<
|n| before 3.3262020763893965
/home/yuming/anaconda3/envs/work/lib//python3.7/site-packages/scipy/optimize/_minimize.py:505: RuntimeWarning: Method BFGS does not use Hessian information (hess).
  RuntimeWarning)
Optimization terminated successfully.
         Current function value: -14.869142
         Iterations: 107
         Function evaluations: 110
         Gradient evaluations: 110
|n| after 0.022673477995055633 L after -14.869142324661485
Ts 14.873600576001856
dTs -0.004273690678616872
eigenA
[-1.83997812 -1.83947331 -0.13254582]
[-1.89442018 -1.89393095 -0.20359202]
wfnDiff -0.049396720744606874
ESP fitting starts. This might take a while.
ESP fitting done
vxc_a_H_d = np.copy(inverser.vxc_a_grid)
vxc_b_H_d = np.copy(inverser.vxc_b_grid)
inverser.change_v0("FermiAmaldi")
inverser.find_vxc_scipy_WuYang(14000, opt_method=opt_method);
Initialize out_put: 0.
<<<<<<<<<<<<<<<<<<<<<<WuYang vxc Inversion<<<<<<<<<<<<<<<<<<<
|n| before 0.1076289517833667
Optimization terminated successfully.
         Current function value: -14.869299
         Iterations: 87
         Function evaluations: 90
         Gradient evaluations: 90
|n| after 0.008917211453371482 L after -14.869298884048645
Ts 14.870983656944263
dTs -0.0016567716210237307
eigenA
[-1.83997812 -1.83947331 -0.13254582]
[-1.90992763 -1.90943455 -0.16976178]
wfnDiff -0.5127061136555178
ESP fitting starts. This might take a while.
ESP fitting done
vxc_a_FA_d = np.copy(inverser.vxc_a_grid)
vxc_b_FA_d = np.copy(inverser.vxc_b_grid)
vxc_a_input_d = np.copy(inverser.input_vxc_a)
vxc_b_input_d = np.copy(inverser.input_vxc_b)
xyzw_input_d = input_wfn.V_potential().get_np_xyzw()
xyzw_mol_d = mol.Vpot.get_np_xyzw()
runfile('/home/yuming/PDFT/pdft/pdft/tests/XC_Inversion/Li2.py', wdir='/home/yuming/PDFT/pdft/pdft/tests/XC_Inversion')
WuYangScipy_BFGS_Hartree_6-31G_None_False_input_every
Number of Basis:  18 18
ESP fitting starts. This might take a while.
ESP fitting done
Initialize out_put: 0.
<<<<<<<<<<<<<<<<<<<<<<WuYang vxc Inversion<<<<<<<<<<<<<<<<<<<
|n| before 2.615347674698399
Optimization terminated successfully.
         Current function value: -14.899825
         Iterations: 80
         Function evaluations: 82
         Gradient evaluations: 82
|n| after 0.017528704311609477 L after -14.899824869090455
Ts 14.904060719288044
dTs -0.004096894049428211
eigenA
[-1.83499643 -1.83451802 -0.1308712 ]
[-1.825435   -1.82503977 -0.12934417]
wfnDiff -0.8149348753452734
ESP fitting starts. This might take a while.
ESP fitting done
vxc_a_H_631G = np.copy(inverser.vxc_a_grid)
vxc_b_H_631G = np.copy(inverser.vxc_b_grid)
inverser.change_v0("FermiAmaldi")
inverser.find_vxc_scipy_WuYang(14000, opt_method=opt_method);
Initialize out_put: 0.
<<<<<<<<<<<<<<<<<<<<<<WuYang vxc Inversion<<<<<<<<<<<<<<<<<<<
|n| before 0.11603438157160528
Optimization terminated successfully.
         Current function value: -14.899956
         Iterations: 64
         Function evaluations: 67
         Gradient evaluations: 67
|n| after 0.00415526968522175 L after -14.899955855232044
Ts 14.90092025125734
dTs -0.0009564260187233701
eigenA
[-1.83499643 -1.83451802 -0.1308712 ]
[-1.90485048 -1.90439821 -0.16458112]
wfnDiff 0.5770956444936196
ESP fitting starts. This might take a while.
ESP fitting done
vxc_a_FA_631G = np.copy(inverser.vxc_a_grid)
vxc_b_FA_631G = np.copy(inverser.vxc_b_grid)
vxc_a_input_631G = np.copy(inverser.input_vxc_a)
vxc_b_input_631G = np.copy(inverser.input_vxc_b)
xyzw_input_631G = input_wfn.V_potential().get_np_xyzw()
xyzw_mol_631G = mol.Vpot.get_np_xyzw()
f,ax = plt.subplots(2,2,dpi=200, sharex='col', sharey='row',
                        gridspec_kw={'hspace': 0, 'wspace': 0})
XC_Inversion.pdft.plot1d_x(vxc_a_H_631G, xyzw=xyzw_input_631G, ax=ax[0,0])
XC_Inversion.pdft.plot1d_x(vxc_a_H_d, xyzw=xyzw_input_d, ax=ax[0,1])
XC_Inversion.pdft.plot1d_x(vxc_a_H_at, xyzw=xyzw_input_at, ax=ax[1,0])
XC_Inversion.pdft.plot1d_x(vxc_a_H_aq, xyzw=xyzw_input_aq, ax=ax[1,1])
XC_Inversion.pdft.plot1d_x(vxc_a_FA_631G, xyzw=xyzw_input_631G, ax=ax[0,0])
XC_Inversion.pdft.plot1d_x(vxc_a_FA_d, xyzw=xyzw_input_d, ax=ax[0,1])
XC_Inversion.pdft.plot1d_x(vxc_a_FA_at, xyzw=xyzw_input_at, ax=ax[1,0])
XC_Inversion.pdft.plot1d_x(vxc_a_FA_aq, xyzw=xyzw_input_aq, ax=ax[1,1])
XC_Inversion.pdft.plot1d_x(vxc_a_input_631G, xyzw=xyzw_input_631G, ax=ax[0,0], color="black", ls="dotted")
XC_Inversion.pdft.plot1d_x(vxc_a_input_d, xyzw=xyzw_input_d, ax=ax[0,1], color="black", ls="dotted")
XC_Inversion.pdft.plot1d_x(vxc_a_input_at, xyzw=xyzw_input_at, ax=ax[1,0], color="black", ls="dotted")
XC_Inversion.pdft.plot1d_x(vxc_a_input_aq, xyzw=xyzw_input_aq, ax=ax[1,1], color="black", ls="dotted")
for i in range(2):
    for j in range(2):
        ax[i, j].set_xlim(0, 18)
        ax[i, j].set_ylim(-3, 0.5)
f.show()
Traceback (most recent call last):
  File "/home/yuming/anaconda3/envs/work/lib/python3.7/site-packages/IPython/core/interactiveshell.py", line 3326, in run_code
    exec(code_obj, self.user_global_ns, self.user_ns)
  File "<ipython-input-15-b835a259e203>", line 5, in <module>
    XC_Inversion.pdft.plot1d_x(vxc_a_H_at, xyzw=xyzw_input_at, ax=ax[1,0])
NameError: name 'vxc_a_H_at' is not defined
vxc_a_H_aq = vxc_a_H_tq
vxc_b_H_aq = vxc_b_H_tq
runfile('/home/yuming/PDFT/pdft/pdft/tests/XC_Inversion/Li2.py', wdir='/home/yuming/PDFT/pdft/pdft/tests/XC_Inversion')
WuYangScipy_BFGS_Hartree_aug-cc-pvtz_None_False_input_every
Number of Basis:  92 92
ESP fitting starts. This might take a while.
ESP fitting done
Initialize out_put: 0.
<<<<<<<<<<<<<<<<<<<<<<WuYang vxc Inversion<<<<<<<<<<<<<<<<<<<
|n| before 2.7828135213052168
Warning: Desired error not necessarily achieved due to precision loss.
         Current function value: -14.261247
         Iterations: 6
         Function evaluations: 150
         Gradient evaluations: 138
|n| after 2.705986097093256 L after -14.261247270704
Ts 16.910350817346533
dTs -2.420822304839066
eigenA
[-1.85980277 -1.8594294  -0.13315016]
[-2.44716961 -2.44694468 -0.22112362]
wfnDiff 0.012485158082409607
ESP fitting starts. This might take a while.
ESP fitting done
vxc_a_H_at = np.copy(inverser.vxc_a_grid)
vxc_b_H_at = np.copy(inverser.vxc_b_grid)
inverser.change_v0("FermiAmaldi")
inverser.find_vxc_scipy_WuYang(14000, opt_method=opt_method);
Initialize out_put: 0.
<<<<<<<<<<<<<<<<<<<<<<WuYang vxc Inversion<<<<<<<<<<<<<<<<<<<
|n| before 2.5385652584527243
/home/yuming/anaconda3/envs/work/lib//python3.7/site-packages/scipy/optimize/_minimize.py:505: RuntimeWarning: Method BFGS does not use Hessian information (hess).
  RuntimeWarning)
Warning: Desired error not necessarily achieved due to precision loss.
         Current function value: -14.480800
         Iterations: 5
         Function evaluations: 140
         Gradient evaluations: 128
|n| after 1.1946939239154395 L after -14.480800180047035
Ts 13.951463079044514
dTs 0.5380654334629784
eigenA
[-1.85980277 -1.8594294  -0.13315016]
[-1.9354728  -1.93510185 -0.22973621]
wfnDiff -0.2515394688630077
ESP fitting starts. This might take a while.
ESP fitting done
vxc_a_FA_at = np.copy(inverser.vxc_a_grid)
vxc_b_FA_at = np.copy(inverser.vxc_b_grid)
vxc_a_input_at = np.copy(inverser.input_vxc_a)
vxc_b_input_at = np.copy(inverser.input_vxc_b)
xyzw_input_at = input_wfn.V_potential().get_np_xyzw()
xyzw_mol_at = mol.Vpot.get_np_xyzw()
f,ax = plt.subplots(2,2,dpi=200, sharex='col', sharey='row',
                        gridspec_kw={'hspace': 0, 'wspace': 0})
XC_Inversion.pdft.plot1d_x(vxc_a_H_631G, xyzw=xyzw_input_631G, ax=ax[0,0])
XC_Inversion.pdft.plot1d_x(vxc_a_H_d, xyzw=xyzw_input_d, ax=ax[0,1])
XC_Inversion.pdft.plot1d_x(vxc_a_H_at, xyzw=xyzw_input_at, ax=ax[1,0])
XC_Inversion.pdft.plot1d_x(vxc_a_H_aq, xyzw=xyzw_input_aq, ax=ax[1,1])
XC_Inversion.pdft.plot1d_x(vxc_a_FA_631G, xyzw=xyzw_input_631G, ax=ax[0,0])
XC_Inversion.pdft.plot1d_x(vxc_a_FA_d, xyzw=xyzw_input_d, ax=ax[0,1])
XC_Inversion.pdft.plot1d_x(vxc_a_FA_at, xyzw=xyzw_input_at, ax=ax[1,0])
XC_Inversion.pdft.plot1d_x(vxc_a_FA_aq, xyzw=xyzw_input_aq, ax=ax[1,1])
XC_Inversion.pdft.plot1d_x(vxc_a_input_631G, xyzw=xyzw_input_631G, ax=ax[0,0], color="black", ls="dotted")
XC_Inversion.pdft.plot1d_x(vxc_a_input_d, xyzw=xyzw_input_d, ax=ax[0,1], color="black", ls="dotted")
XC_Inversion.pdft.plot1d_x(vxc_a_input_at, xyzw=xyzw_input_at, ax=ax[1,0], color="black", ls="dotted")
XC_Inversion.pdft.plot1d_x(vxc_a_input_aq, xyzw=xyzw_input_aq, ax=ax[1,1], color="black", ls="dotted")
for i in range(2):
    for j in range(2):
        ax[i, j].set_xlim(0, 18)
        ax[i, j].set_ylim(-3, 0.5)
f.show()
f.savefig("Li2v0_1")

